version: '3'

services:
  caddy:
    restart: always
    image: caddy:alpine
    networks:
      - external_network
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/config:/config
      - ./caddy/data:/data
      - ./mastodon/public:/html/mastodon

  db:
    restart: always
    image: postgres:9.6-alpine
    shm_size: 512mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres:/var/lib/postgresql/data
    env_file: .env.postgres

  redis:
    restart: always
    image: redis:6.0-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

  es:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.1
    environment:
      - "ES_JAVA_OPTS=-Xms4G -Xmx4G"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
      - ./elasticsearch-plugins:/plugins
    entrypoint: /plugins/entry.sh
    ulimits:
      memlock:
        soft: -1
        hard: -1

  web:
    build: ./mastodon
    image: tootsuite/mastodon:v3.4.1
    restart: always
    env_file: .env.mastodon
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    depends_on:
      - db
      - redis
      - es
    volumes:
      - ./files:/mastodon/public/system

  streaming:
    build: ./mastodon
    image: tootsuite/mastodon:v3.4.1
    restart: always
    env_file: .env.mastodon
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    depends_on:
      - db
      - redis

  sidekiq:
    build: ./mastodon
    image: tootsuite/mastodon:v3.4.1
    restart: always
    env_file: .env.mastodon
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./files:/mastodon/public/system

networks:
  external_network:
  internal_network:
    internal: true
